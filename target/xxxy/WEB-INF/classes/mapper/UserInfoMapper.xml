<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="po.UserInfo" >
    <id column="user_phone" property="userPhone" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="user_password" property="userPassword" jdbcType="CHAR" />
    <result column="user_name" property="userName" jdbcType="CHAR" />
    <result column="user_is_VIP" property="userIsVip" jdbcType="TINYINT" />
    <result column="user_balance" property="userBalance" jdbcType="DECIMAL" />
    <result column="user_lock_state" property="userLockState" jdbcType="TINYINT" />
    <result column="user_authentication" property="userAuthentication" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_phone, user_id, user_password, user_name, user_is_VIP, user_balance, user_lock_state, 
    user_authentication
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_phone = #{userPhone,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_info
    where user_phone = #{userPhone,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.UserInfo" >
    insert into user_info (user_phone, user_id, user_password, 
      user_name, user_is_VIP, user_balance, 
      user_lock_state, user_authentication)
    values (#{userPhone,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{userPassword,jdbcType=CHAR}, 
      #{userName,jdbcType=CHAR}, #{userIsVip,jdbcType=TINYINT}, #{userBalance,jdbcType=DECIMAL}, 
      #{userLockState,jdbcType=TINYINT}, #{userAuthentication,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="po.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userIsVip != null" >
        user_is_VIP,
      </if>
      <if test="userBalance != null" >
        user_balance,
      </if>
      <if test="userLockState != null" >
        user_lock_state,
      </if>
      <if test="userAuthentication != null" >
        user_authentication,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userPhone != null" >
        #{userPhone,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=CHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userIsVip != null" >
        #{userIsVip,jdbcType=TINYINT},
      </if>
      <if test="userBalance != null" >
        #{userBalance,jdbcType=DECIMAL},
      </if>
      <if test="userLockState != null" >
        #{userLockState,jdbcType=TINYINT},
      </if>
      <if test="userAuthentication != null" >
        #{userAuthentication,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=CHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=CHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=CHAR},
      </if>
      <if test="record.userIsVip != null" >
        user_is_VIP = #{record.userIsVip,jdbcType=TINYINT},
      </if>
      <if test="record.userBalance != null" >
        user_balance = #{record.userBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.userLockState != null" >
        user_lock_state = #{record.userLockState,jdbcType=TINYINT},
      </if>
      <if test="record.userAuthentication != null" >
        user_authentication = #{record.userAuthentication,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set user_phone = #{record.userPhone,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      user_password = #{record.userPassword,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=CHAR},
      user_is_VIP = #{record.userIsVip,jdbcType=TINYINT},
      user_balance = #{record.userBalance,jdbcType=DECIMAL},
      user_lock_state = #{record.userLockState,jdbcType=TINYINT},
      user_authentication = #{record.userAuthentication,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.UserInfo" >
    update user_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=CHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="userIsVip != null" >
        user_is_VIP = #{userIsVip,jdbcType=TINYINT},
      </if>
      <if test="userBalance != null" >
        user_balance = #{userBalance,jdbcType=DECIMAL},
      </if>
      <if test="userLockState != null" >
        user_lock_state = #{userLockState,jdbcType=TINYINT},
      </if>
      <if test="userAuthentication != null" >
        user_authentication = #{userAuthentication,jdbcType=TINYINT},
      </if>
    </set>
    where user_phone = #{userPhone,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.UserInfo" >
    update user_info
    set user_id = #{userId,jdbcType=CHAR},
      user_password = #{userPassword,jdbcType=CHAR},
      user_name = #{userName,jdbcType=CHAR},
      user_is_VIP = #{userIsVip,jdbcType=TINYINT},
      user_balance = #{userBalance,jdbcType=DECIMAL},
      user_lock_state = #{userLockState,jdbcType=TINYINT},
      user_authentication = #{userAuthentication,jdbcType=TINYINT}
    where user_phone = #{userPhone,jdbcType=CHAR}
  </update>
</mapper>