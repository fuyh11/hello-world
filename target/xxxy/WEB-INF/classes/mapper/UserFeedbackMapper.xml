<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserFeedbackMapper">
  <resultMap id="BaseResultMap" type="po.UserFeedback">
    <id column="feedback_id" jdbcType="INTEGER" property="feedbackId" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="pile_id" jdbcType="CHAR" property="pileId" />
    <result column="feedback_info" jdbcType="VARCHAR" property="feedbackInfo" />
    <result column="feedback_time" jdbcType="VARCHAR" property="feedbackTime" />
    <result column="feedback_result" jdbcType="VARCHAR" property="feedbackResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedback_id, user_id, admin_id, pile_id, feedback_info, feedback_time, feedback_result
  </sql>
  <select id="selectByExample" parameterType="po.UserFeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.UserFeedbackExample">
    delete from user_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.UserFeedback">
    insert into user_feedback (feedback_id, user_id, admin_id, 
      pile_id, feedback_info, feedback_time, 
      feedback_result)
    values (#{feedbackId,jdbcType=INTEGER}, #{userId,jdbcType=CHAR}, #{adminId,jdbcType=INTEGER}, 
      #{pileId,jdbcType=CHAR}, #{feedbackInfo,jdbcType=VARCHAR}, #{feedbackTime,jdbcType=VARCHAR}, 
      #{feedbackResult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="po.UserFeedback">
    insert into user_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        feedback_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="pileId != null">
        pile_id,
      </if>
      <if test="feedbackInfo != null">
        feedback_info,
      </if>
      <if test="feedbackTime != null">
        feedback_time,
      </if>
      <if test="feedbackResult != null">
        feedback_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        #{feedbackId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="pileId != null">
        #{pileId,jdbcType=CHAR},
      </if>
      <if test="feedbackInfo != null">
        #{feedbackInfo,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null">
        #{feedbackTime,jdbcType=VARCHAR},
      </if>
      <if test="feedbackResult != null">
        #{feedbackResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.UserFeedbackExample" resultType="java.lang.Integer">
    select count(*) from user_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_feedback
    <set>
      <if test="record.feedbackId != null">
        feedback_id = #{record.feedbackId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.pileId != null">
        pile_id = #{record.pileId,jdbcType=CHAR},
      </if>
      <if test="record.feedbackInfo != null">
        feedback_info = #{record.feedbackInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackTime != null">
        feedback_time = #{record.feedbackTime,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackResult != null">
        feedback_result = #{record.feedbackResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_feedback
    set feedback_id = #{record.feedbackId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=CHAR},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      pile_id = #{record.pileId,jdbcType=CHAR},
      feedback_info = #{record.feedbackInfo,jdbcType=VARCHAR},
      feedback_time = #{record.feedbackTime,jdbcType=VARCHAR},
      feedback_result = #{record.feedbackResult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.UserFeedback">
    update user_feedback
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="pileId != null">
        pile_id = #{pileId,jdbcType=CHAR},
      </if>
      <if test="feedbackInfo != null">
        feedback_info = #{feedbackInfo,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null">
        feedback_time = #{feedbackTime,jdbcType=VARCHAR},
      </if>
      <if test="feedbackResult != null">
        feedback_result = #{feedbackResult,jdbcType=VARCHAR},
      </if>
    </set>
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.UserFeedback">
    update user_feedback
    set user_id = #{userId,jdbcType=CHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      pile_id = #{pileId,jdbcType=CHAR},
      feedback_info = #{feedbackInfo,jdbcType=VARCHAR},
      feedback_time = #{feedbackTime,jdbcType=VARCHAR},
      feedback_result = #{feedbackResult,jdbcType=VARCHAR}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
</mapper>